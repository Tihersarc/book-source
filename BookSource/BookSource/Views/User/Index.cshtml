@using BookSource.Models.ViewModel
@using BookSource.Tools

@model UserViewModel
@{
    ViewData["Title"] = "User";
    ListOfBooksViewModel? showList=null;
    if (Model!=null&&Model.ListOfBooks!=null&&Model.IdSelectedListOfBooks!=null)
    {
        showList = Model.ListOfBooks.Where(x => x.IdListOfBooks == Model.IdSelectedListOfBooks).FirstOrDefault();
    }
}
<style>
    .userLayout {
        display: grid;
        grid-template-areas:
            "sidebar body";
        grid-template-columns: 1fr 3fr;
        gap: 16px;
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
        background: rgba(237, 231, 224, 0.6);
        border-radius: 15px;
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
        backdrop-filter: blur(2px);
    }

    .userSidebar {
        grid-area: sidebar;
        background-color: #ffffff;
        backdrop-filter: blur(2px);
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

        .userSidebar div {
            margin-bottom: 10px;
            font-size: 16px;
            color: #000; /* Cambia el color del texto a negro */
        }

    .userBody {
        grid-area: body;
        background-color: #ffffff;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    .userImg
    {
        width: 100%;
        border-radius: 50%;
        object-fit: cover;
        margin-bottom: 15px;
    }

    .userSidebar div {
        margin-bottom: 10px;
        font-size: 16px;
    }

    .square-container {
        aspect-ratio: 1;
        border-radius: 50%;
        overflow: hidden;
        margin: 0 auto 20px auto;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .square-container img {
            width: 100%;
            height: 100%;
            object-fit: cover;
    }

    .config-button {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        color: white;
        font-size: 16px;
        cursor: pointer;
        margin: 10px auto;
        transition: background-color 0.3s ease;
    }

        .config-button img {
            width: 24px;
            height: 24px;
        }

</style>


@if (Model!=null)
{
<div class="row pt-2">
    <div class="col-11">Perfil de @Model.UserName</div>
        @if (Model.UserName == ViewBag.UserName)
        {
            <a class="config-button col" asp-area="" asp-controller="User" asp-action="Configuration" asp-route-username=@Model.UserName>
                <img src=@Tools.ConfigImg alt="Configuración">
            </a>
        }
        else if(ViewBag.UserName != null)
        {
            if (Model.FollowerList != null && Model.FollowerList.Contains(ViewBag.IdSessionUser))
            {
                <a class="btn btn-primary col" asp-controller="User" asp-action="UnFollow" asp-route-username=@Model.UserName>
                    UnFollow
                </a>
            }
            else
            {
                <a class="btn btn-primary col" asp-controller="User" asp-action="Follow" asp-route-username=@Model.UserName>
                    Follow
                </a>
            }
        }

</div>
<section class="userLayout">
        <div class="userSidebar">
            <div class="square-container border">
                <img class="img-fluid" src=@(Model.ProfileImageUrl??Tools.DefaultUserImg) alt=@Tools.DefaultUserImg />
            </div>

            <div>Usuario: @Model.UserName</div>
            <div>Correo: @Model.Email</div>
            <div>Nacimiento: @(Model.Birthdate.HasValue ? Model.Birthdate : "Sin establecer")</div>
            <div>Seguidos</div>
            <div>Seguidores</div>
            <div>
                <a asp-controller="ListOfBooks" asp-action="Index" asp-route-username=@Model.UserName>Listas de libros</a>
            </div>
        </div>
        <div class="userBody">
            <div class="row">
                <div class="col">
                    <form method="post" asp-action="ChangeList" asp-controller="User" asp-route-username=@Model.UserName asp-route-selectedListId=@Model.IdSelectedListOfBooks>
                        <select asp-for="IdSelectedListOfBooks" name="IdSelectedListOfBooks" class="form-select" onchange="this.form.submit()">
                            <option value="">-- Selecciona Lista --</option>
                            @if (Model.ListOfBooks != null)
                            {
                                @foreach (ListOfBooksViewModel listBooks in Model.ListOfBooks)
                                {
                                    if (Model.IdSelectedListOfBooks != null && listBooks.IdListOfBooks == Model.IdSelectedListOfBooks)
                                    {
                                        <option value="@listBooks.IdListOfBooks" selected>
                                            @listBooks.ListName
                                        </option>
                                    }
                                    else
                                    {
                                        <option value="@listBooks.IdListOfBooks">
                                            @listBooks.ListName
                                        </option>
                                    }
                                }
                            }
                        </select>
                    </form>
                </div>
            </div>
            @if (showList != null)
            {
                await Html.RenderPartialAsync("_BookList", showList.Books);
            }
        </div>
</section>
}
else
{
    <div>Usuario no encontrado</div>
}