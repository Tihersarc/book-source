@using BookSource.Models.ViewModel
@using BookSource.Tools

@model UserViewModel
@{
    ViewData["Title"] = "User";
    ListOfBooksViewModel? showList = null;
    if (Model != null && Model.ListOfBooks != null && Model.IdSelectedListOfBooks != null)
    {
        showList = Model.ListOfBooks.Where(x => x.IdListOfBooks == Model.IdSelectedListOfBooks).FirstOrDefault();
    }
}
<style>
    /* Estructura general para el layout del usuario */
    .user-profile-layout {
        display: grid;
        grid-template-areas: "sidebar body";
        grid-template-columns: 1fr 3fr;
        gap: 16px;
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
        background: rgba(237, 231, 224, 0.9);
        border-radius: 15px;
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
        backdrop-filter: blur(2px);
        border: 2px solid rgba(189, 152, 120, 0.8);
    }

    /* Sidebar del perfil */
    .user-profile-sidebar, .user-profile-body {
        color: black;
        padding: 10px;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border: 1px solid #d7ccc8;
    }

    .user-profile-sidebar {
        text-align: center;
    }

    /* Elementos de texto */
    .user-profile-title, .user-profile-subtitle, .user-profile-info, .user-profile-list {
        color: black;
        font-family: Georgia, 'Times New Roman', Times, serif;
    }

    .user-profile-title {
        font-size: 28px;
        font-weight: bold;
        margin-bottom: 15px;
        text-align: center;
        border-bottom: 2px solid #d7ccc8;
        display: inline-block;
        padding-bottom: 10px;
    }

    .user-profile-subtitle {
        font-size: 20px;
        margin-bottom: 20px;
    }

    .user-profile-info {
        font-size: 16px;
        margin-bottom: 15px;
        text-align: justify;
    }

    .user-profile-list {
        padding-left: 30px;
        list-style-type: square;
        font-size: 16px;
        margin-bottom: 15px;
    }

    /* Estilo para la imagen del usuario */
    .user-profile-img, .user-profile-img-container img {
        width: 100%;
        object-fit: cover;
        box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);
        border-radius: 70%;
    }

    .user-profile-img-container {
        aspect-ratio: 1;
        overflow: hidden;
        margin: 0 auto 20px;
    }

    /* Estilo para los botones de configuración y seguir */
    .config-button, .follow-button {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        color: white;
        font-size: 16px;
        cursor: pointer;
        margin: 10px auto;
        transition: background-color 0.3s ease;
    }

        .config-button img, .follow-button img {
            width: 24px;
            height: 24px;
        }

    /* Enlace de "Seguidos" y "Seguidores" */
    .user-profile-link {
        color: darkblue;
        text-decoration: none;
        margin: 0 5px;
    }

        .user-profile-link:hover {
            text-decoration: underline;
        }
</style>

@if (Model != null)
{
    <div class="row pt-2">
        <div class="col-11">Perfil de @Model.UserName</div>
        @if (Model.UserName == ViewBag.UserName)
        {
            <a class="config-button col" asp-area="" asp-controller="User" asp-action="Configuration" asp-route-username=@Model.UserName>
                <img src=@Tools.ConfigImg alt="Configuración">
            </a>
        }
        else if (ViewBag.UserName != null)
        {
            if (Model.FollowerList != null && Model.FollowerList.Contains(ViewBag.IdSessionUser))
            {
                <a class="follow-button col" asp-controller="User" asp-action="UnFollow" asp-route-username=@Model.UserName>
                    UnFollow
                </a>
            }
            else
            {
                <a class="follow-button col" asp-controller="User" asp-action="Follow" asp-route-username=@Model.UserName>
                    Follow
                </a>
            }
        }

    </div>
    <section class="user-profile-layout">
        <div class="user-profile-sidebar">
            <div class="user-profile-img-container border">
                <img class="img-fluid" src=@(Model.ProfileImageUrl??Tools.DefaultUserImg) alt="Imagen de perfil" />
            </div>

            <div class="user-profile-info">Usuario: @Model.UserName</div>
            <div class="user-profile-info">Correo: @Model.Email</div>
            <div class="user-profile-info">Nacimiento: @(Model.Birthdate.HasValue ? Model.Birthdate : "Sin establecer")</div>
            <div class="user-profile-list">
                <a class="user-profile-link" asp-controller="User" asp-action="Follower" asp-route-username=@Model.UserName asp-route-followType="followed">Seguidos</a>
            </div>
            <div class="user-profile-list">
                <a class="user-profile-link" asp-controller="User" asp-action="Follower" asp-route-username=@Model.UserName asp-route-followType="follower">Seguidores</a>
            </div>
            <div class="user-profile-list">
                <a class="user-profile-link" asp-controller="ListOfBooks" asp-action="Index" asp-route-username=@Model.UserName>Listas de libros</a>
            </div>
        </div>
        <div class="user-profile-body">
            <div class="row">
                <div class="col">
                    <form method="post" asp-action="ChangeList" asp-controller="User" asp-route-username=@Model.UserName asp-route-selectedListId=@Model.IdSelectedListOfBooks>
                        <select asp-for="IdSelectedListOfBooks" name="IdSelectedListOfBooks" class="form-select" onchange="this.form.submit()">
                            <option value="">-- Selecciona Lista --</option>
                            @if (Model.ListOfBooks != null)
                            {
                                @foreach (ListOfBooksViewModel listBooks in Model.ListOfBooks)
                                {
                                    if (Model.IdSelectedListOfBooks != null && listBooks.IdListOfBooks == Model.IdSelectedListOfBooks)
                                    {
                                        <option value="@listBooks.IdListOfBooks" selected>
                                            @listBooks.ListName
                                        </option>
                                    }
                                    else
                                    {
                                        <option value="@listBooks.IdListOfBooks">
                                            @listBooks.ListName
                                        </option>
                                    }
                                }
                            }
                        </select>
                    </form>
                </div>
            </div>
            @if (showList != null)
            {
                await Html.RenderPartialAsync("_BookList", showList.Books);
            }
        </div>
    </section>
}
else
{
    <div>Usuario no encontrado</div>
}
